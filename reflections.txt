diff helped me by pointing out the lines that were different between versions.
Without it I would have had to check the two versions line by line to find the 
differences which could have been quite time intensive.

Having easy access to the entire history of a file means that you can save 
valuable time if something wrong occurs or if you don't like the changes 
you have made.

Manually choosing your commits does have a few possible cons, for example a 
user might commit too often causing problems when trying to find which version
they want to revert back to later or a user may not commit often enough find that 
when they want to revert to a previous version there commits are too sparse.
One big important feature of manual commits is that he user can make sure that 
each commit is meaningful and functional.

I think git allows multiple files to be saved in one commit because some code
needs other bits of code to function fully. For example if you design a website 
that uses javascript. The html code needs the javascript to be fully...

How can you use the commands git log and git diff to view the history of files?

By combining git log and git diff we can view the history of our files. Git log 
allows us to the see the different commits along with their IDs,dates, and author.
Using their IDs as the arguments on a git diff command we can see the differences listed
between the two versions.

How might using version control make you more confident to make changes that could break something?

Being able to feel confident that you can undue any new bugs that your introduce can make you more 
adventures because you don't have to worry about spending hours and hours trying to fix any mistakes 
you have made.

How is the staging area different from the working directory and the repository? What value do you think 
it offers?

The staging area is used for selecting exactly which files you want to add to the commit. The working directory
is the current directory you are making modifications to. And the repository is the sum total of the directory along
with all versions of all files in that directory.
